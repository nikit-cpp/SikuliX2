<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  <!--
  * Copyright 2010-2015, Sikuli.org, sikulix.com
  * Released under the MIT License.
  *
  * RaiMan 2014
  -->
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <sikuli.jartype>plain.xml</sikuli.jartype>
    <sikuli.jarname>${project.version}</sikuli.jarname>
    <sikulixvmaj>2</sikulixvmaj>
    <sikulixvmin>0</sikulixvmin>
    <sikulixvsub>0</sikulixvsub>
    <sikulixbeta>0</sikulixbeta>
    
    <!-- this decides, where setup downloads from -->
    <!-- <sikulixdev>release</sikulixdev> -->
    <sikulixdev>development</sikulixdev>
    
    <sikuli.usedversion>${sikulixvmaj}.${sikulixvmin}.${sikulixvsub}</sikuli.usedversion>
    <sikuli.minorversion>${sikulixvmaj}.${sikulixvmin}.${sikulixvsub}</sikuli.minorversion>
    <sikulixjythonversion>2.7-b4</sikulixjythonversion>
    <sikulixjrubyversion>1.7.19</sikulixjrubyversion>
    <sikulixlocalrepo>${settings.localRepository}</sikulixlocalrepo>
    <sikuli.helpers>Setup/src/main/resources/content</sikuli.helpers>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd_HH:mm</maven.build.timestamp.format>
    
    <maven.compiler.source>1.7</maven.compiler.source>
	<maven.compiler.target>1.7</maven.compiler.target>
    
    <bintray.repo>nikit007/maven</bintray.repo>
    <bintray.package>sikulix2api</bintray.package>
  </properties>
  
  
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.sikulix</groupId>
  <artifactId>sikulix2api</artifactId>
  <!-- x.y.z, z is prepared for next release, e. g. current jar on bitntay iz x.y.z-1 -->
  <version>2.0.11</version>
  
  <repositories>
    <repository>  <!-- com.sikulix.sikulixapi: jxgrabkey -->
      <id>uni-due.de</id>
      <name>uni-due.de</name>
      <url>http://mvn.is.inf.uni-due.de:8081/nexus/content/repositories/atunes-dependencies/</url>
      <layout>default</layout>
      <releases>
	<enabled>true</enabled>
	<updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
	<enabled>false</enabled>
	<updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
    
  </repositories>
  
  <dependencies>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>com.melloware</groupId>
      <artifactId>jintellitype</artifactId>
      <version>1.3.7</version>
    </dependency>
    <dependency>
      <groupId>jxgrabkey</groupId>
      <artifactId>jxgrabkey</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <!-- BridJ aims to be the ultimate Java / native interoperability library
      Call C, C++, ObjectiveC libraries without compiling native code
      https://code.google.com/p/bridj/ -->
      <groupId>com.nativelibs4java</groupId>
      <artifactId>bridj</artifactId>
      <version>0.6.2</version>
      <exclusions>
	<!-- exclude this artifact - it includes old junit, which causes problems in classpath -->
	<exclusion>
	  <groupId>com.google.android.tools</groupId>
	  <artifactId>dx</artifactId>
	</exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
    
  </dependencies>
  
  <build>
    <!-- Need For Succeed Tests -->
    <resources>
      <resource>
	<directory>src/main/resources</directory>
	<filtering>true</filtering>
	<includes>
	  <include>Settings/*</include>
	</includes>
      </resource>
      <resource>
	<directory>src/main/resources</directory>
	<filtering>false</filtering>
	<excludes>
	  <exclude>Settings/*</exclude>
	</excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>autoincrement-versions-maven-plugin</artifactId>
	<version>2.0-SNAPSHOT</version>
	<executions>
	  <execution>
	    <id>update-pom-versions</id>
	    <goals>
	      <goal>increment</goal>
	      <goal>commit</goal>
	    </goals>
	    <phase>compile</phase>
	    <configuration>
	      <autoIncrementVersion>true</autoIncrementVersion>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>org.codehaus.mojo</groupId>
    								<artifactId>
    									autoincrement-versions-maven-plugin
    								</artifactId>
    								<versionRange>
    									[2.0-SNAPSHOT,)
    								</versionRange>
    								<goals>
    									<goal>commit</goal>
    									<goal>increment</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>
  
  <distributionManagement>
    <repository>
      <id>bintray</id>
      <url>https://api.bintray.com/maven/${bintray.repo}/${bintray.package}</url>
    </repository>
  </distributionManagement>
  
  <pluginRepositories>
    <pluginRepository>
      <id>autoincrement-versions-maven-plugin</id>
      <name>autoincrement-versions-maven-plugin</name>
      <url>http://autoincrement-versions-maven-plugin.googlecode.com/svn/repo</url>
      <snapshots>
	<enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  
</project>
